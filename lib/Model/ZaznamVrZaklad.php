<?php
/**
 * ZaznamVrZaklad
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ARES: REST API - veřejné
 *
 * REST rozhraní systému ARES
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.51
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ZaznamVrZaklad Class Doc Comment
 *
 * @category Class
 * @description Detailní informace o ekonomickém subjektu - obecný předek
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ZaznamVrZaklad implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ZaznamVrZaklad';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'akcie' => '\Swagger\Client\Model\EmiseAkcieVr[]',
        'rejstrik' => 'string',
        'primarni_zaznam' => 'bool',
        'spisova_znacka' => '\Swagger\Client\Model\SpisovaZnackaVr[]',
        'ico' => '\Swagger\Client\Model\IcoVr[]',
        'obchodni_jmeno' => '\Swagger\Client\Model\ObchodniJmenoVr[]',
        'vklady' => '\Swagger\Client\Model\VkladVr[]',
        'obchodni_jmeno_cizi' => '\Swagger\Client\Model\ObchodniJmenoCiziVr[]',
        'zakladni_kapital' => '\Swagger\Client\Model\ZakladniKapitalVr[]',
        'pravni_forma' => '\Swagger\Client\Model\PravniFormaVr[]',
        'financni_urad' => 'string',
        'adresy' => '\Swagger\Client\Model\AdresaVr[]',
        'ostatni_skutecnosti' => '\Swagger\Client\Model\ObecnyTextVr[]',
        'datum_aktualizace' => '\DateTime',
        'stav_subjektu' => 'string',
        'datum_vzniku' => '\Swagger\Client\Model\DatumVr[]',
        'datum_zapisu' => '\DateTime',
        'datum_vymazu' => '\DateTime',
        'zpusob_rizeni' => '\Swagger\Client\Model\ZpusobRizeniVr[]',
        'kategorie_zo' => '\Swagger\Client\Model\KategorieZoVr[]',
        'pravni_duvod_vymazu' => '\Swagger\Client\Model\ObecnyTextVr[]',
        'cinnosti' => '\Swagger\Client\Model\CinnostiVr',
        'nazev_nejvyssiho_organu' => '\Swagger\Client\Model\ObecnyTextVr[]',
        'exekuce' => '\Swagger\Client\Model\ObecnyTextVr[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'akcie' => null,
        'rejstrik' => null,
        'primarni_zaznam' => null,
        'spisova_znacka' => null,
        'ico' => null,
        'obchodni_jmeno' => null,
        'vklady' => null,
        'obchodni_jmeno_cizi' => null,
        'zakladni_kapital' => null,
        'pravni_forma' => null,
        'financni_urad' => null,
        'adresy' => null,
        'ostatni_skutecnosti' => null,
        'datum_aktualizace' => 'date',
        'stav_subjektu' => null,
        'datum_vzniku' => null,
        'datum_zapisu' => 'date',
        'datum_vymazu' => 'date',
        'zpusob_rizeni' => null,
        'kategorie_zo' => null,
        'pravni_duvod_vymazu' => null,
        'cinnosti' => null,
        'nazev_nejvyssiho_organu' => null,
        'exekuce' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'akcie' => 'akcie',
        'rejstrik' => 'rejstrik',
        'primarni_zaznam' => 'primarniZaznam',
        'spisova_znacka' => 'spisovaZnacka',
        'ico' => 'ico',
        'obchodni_jmeno' => 'obchodniJmeno',
        'vklady' => 'vklady',
        'obchodni_jmeno_cizi' => 'obchodniJmenoCizi',
        'zakladni_kapital' => 'zakladniKapital',
        'pravni_forma' => 'pravniForma',
        'financni_urad' => 'financniUrad',
        'adresy' => 'adresy',
        'ostatni_skutecnosti' => 'ostatniSkutecnosti',
        'datum_aktualizace' => 'datumAktualizace',
        'stav_subjektu' => 'stavSubjektu',
        'datum_vzniku' => 'datumVzniku',
        'datum_zapisu' => 'datumZapisu',
        'datum_vymazu' => 'datumVymazu',
        'zpusob_rizeni' => 'zpusobRizeni',
        'kategorie_zo' => 'kategorieZO',
        'pravni_duvod_vymazu' => 'pravniDuvodVymazu',
        'cinnosti' => 'cinnosti',
        'nazev_nejvyssiho_organu' => 'nazevNejvyssihoOrganu',
        'exekuce' => 'exekuce'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'akcie' => 'setAkcie',
        'rejstrik' => 'setRejstrik',
        'primarni_zaznam' => 'setPrimarniZaznam',
        'spisova_znacka' => 'setSpisovaZnacka',
        'ico' => 'setIco',
        'obchodni_jmeno' => 'setObchodniJmeno',
        'vklady' => 'setVklady',
        'obchodni_jmeno_cizi' => 'setObchodniJmenoCizi',
        'zakladni_kapital' => 'setZakladniKapital',
        'pravni_forma' => 'setPravniForma',
        'financni_urad' => 'setFinancniUrad',
        'adresy' => 'setAdresy',
        'ostatni_skutecnosti' => 'setOstatniSkutecnosti',
        'datum_aktualizace' => 'setDatumAktualizace',
        'stav_subjektu' => 'setStavSubjektu',
        'datum_vzniku' => 'setDatumVzniku',
        'datum_zapisu' => 'setDatumZapisu',
        'datum_vymazu' => 'setDatumVymazu',
        'zpusob_rizeni' => 'setZpusobRizeni',
        'kategorie_zo' => 'setKategorieZo',
        'pravni_duvod_vymazu' => 'setPravniDuvodVymazu',
        'cinnosti' => 'setCinnosti',
        'nazev_nejvyssiho_organu' => 'setNazevNejvyssihoOrganu',
        'exekuce' => 'setExekuce'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'akcie' => 'getAkcie',
        'rejstrik' => 'getRejstrik',
        'primarni_zaznam' => 'getPrimarniZaznam',
        'spisova_znacka' => 'getSpisovaZnacka',
        'ico' => 'getIco',
        'obchodni_jmeno' => 'getObchodniJmeno',
        'vklady' => 'getVklady',
        'obchodni_jmeno_cizi' => 'getObchodniJmenoCizi',
        'zakladni_kapital' => 'getZakladniKapital',
        'pravni_forma' => 'getPravniForma',
        'financni_urad' => 'getFinancniUrad',
        'adresy' => 'getAdresy',
        'ostatni_skutecnosti' => 'getOstatniSkutecnosti',
        'datum_aktualizace' => 'getDatumAktualizace',
        'stav_subjektu' => 'getStavSubjektu',
        'datum_vzniku' => 'getDatumVzniku',
        'datum_zapisu' => 'getDatumZapisu',
        'datum_vymazu' => 'getDatumVymazu',
        'zpusob_rizeni' => 'getZpusobRizeni',
        'kategorie_zo' => 'getKategorieZo',
        'pravni_duvod_vymazu' => 'getPravniDuvodVymazu',
        'cinnosti' => 'getCinnosti',
        'nazev_nejvyssiho_organu' => 'getNazevNejvyssihoOrganu',
        'exekuce' => 'getExekuce'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['akcie'] = isset($data['akcie']) ? $data['akcie'] : null;
        $this->container['rejstrik'] = isset($data['rejstrik']) ? $data['rejstrik'] : null;
        $this->container['primarni_zaznam'] = isset($data['primarni_zaznam']) ? $data['primarni_zaznam'] : null;
        $this->container['spisova_znacka'] = isset($data['spisova_znacka']) ? $data['spisova_znacka'] : null;
        $this->container['ico'] = isset($data['ico']) ? $data['ico'] : null;
        $this->container['obchodni_jmeno'] = isset($data['obchodni_jmeno']) ? $data['obchodni_jmeno'] : null;
        $this->container['vklady'] = isset($data['vklady']) ? $data['vklady'] : null;
        $this->container['obchodni_jmeno_cizi'] = isset($data['obchodni_jmeno_cizi']) ? $data['obchodni_jmeno_cizi'] : null;
        $this->container['zakladni_kapital'] = isset($data['zakladni_kapital']) ? $data['zakladni_kapital'] : null;
        $this->container['pravni_forma'] = isset($data['pravni_forma']) ? $data['pravni_forma'] : null;
        $this->container['financni_urad'] = isset($data['financni_urad']) ? $data['financni_urad'] : null;
        $this->container['adresy'] = isset($data['adresy']) ? $data['adresy'] : null;
        $this->container['ostatni_skutecnosti'] = isset($data['ostatni_skutecnosti']) ? $data['ostatni_skutecnosti'] : null;
        $this->container['datum_aktualizace'] = isset($data['datum_aktualizace']) ? $data['datum_aktualizace'] : null;
        $this->container['stav_subjektu'] = isset($data['stav_subjektu']) ? $data['stav_subjektu'] : null;
        $this->container['datum_vzniku'] = isset($data['datum_vzniku']) ? $data['datum_vzniku'] : null;
        $this->container['datum_zapisu'] = isset($data['datum_zapisu']) ? $data['datum_zapisu'] : null;
        $this->container['datum_vymazu'] = isset($data['datum_vymazu']) ? $data['datum_vymazu'] : null;
        $this->container['zpusob_rizeni'] = isset($data['zpusob_rizeni']) ? $data['zpusob_rizeni'] : null;
        $this->container['kategorie_zo'] = isset($data['kategorie_zo']) ? $data['kategorie_zo'] : null;
        $this->container['pravni_duvod_vymazu'] = isset($data['pravni_duvod_vymazu']) ? $data['pravni_duvod_vymazu'] : null;
        $this->container['cinnosti'] = isset($data['cinnosti']) ? $data['cinnosti'] : null;
        $this->container['nazev_nejvyssiho_organu'] = isset($data['nazev_nejvyssiho_organu']) ? $data['nazev_nejvyssiho_organu'] : null;
        $this->container['exekuce'] = isset($data['exekuce']) ? $data['exekuce'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets akcie
     *
     * @return \Swagger\Client\Model\EmiseAkcieVr[]
     */
    public function getAkcie()
    {
        return $this->container['akcie'];
    }

    /**
     * Sets akcie
     *
     * @param \Swagger\Client\Model\EmiseAkcieVr[] $akcie akcie
     *
     * @return $this
     */
    public function setAkcie($akcie)
    {
        $this->container['akcie'] = $akcie;

        return $this;
    }

    /**
     * Gets rejstrik
     *
     * @return string
     */
    public function getRejstrik()
    {
        return $this->container['rejstrik'];
    }

    /**
     * Sets rejstrik
     *
     * @param string $rejstrik Typ veřejného rejstříku (VR) - kód (ciselnikKod: TypRejstriku )
     *
     * @return $this
     */
    public function setRejstrik($rejstrik)
    {
        $this->container['rejstrik'] = $rejstrik;

        return $this;
    }

    /**
     * Gets primarni_zaznam
     *
     * @return bool
     */
    public function getPrimarniZaznam()
    {
        return $this->container['primarni_zaznam'];
    }

    /**
     * Sets primarni_zaznam
     *
     * @param bool $primarni_zaznam Primární záznam
     *
     * @return $this
     */
    public function setPrimarniZaznam($primarni_zaznam)
    {
        $this->container['primarni_zaznam'] = $primarni_zaznam;

        return $this;
    }

    /**
     * Gets spisova_znacka
     *
     * @return \Swagger\Client\Model\SpisovaZnackaVr[]
     */
    public function getSpisovaZnacka()
    {
        return $this->container['spisova_znacka'];
    }

    /**
     * Sets spisova_znacka
     *
     * @param \Swagger\Client\Model\SpisovaZnackaVr[] $spisova_znacka spisova_znacka
     *
     * @return $this
     */
    public function setSpisovaZnacka($spisova_znacka)
    {
        $this->container['spisova_znacka'] = $spisova_znacka;

        return $this;
    }

    /**
     * Gets ico
     *
     * @return \Swagger\Client\Model\IcoVr[]
     */
    public function getIco()
    {
        return $this->container['ico'];
    }

    /**
     * Sets ico
     *
     * @param \Swagger\Client\Model\IcoVr[] $ico ico
     *
     * @return $this
     */
    public function setIco($ico)
    {
        $this->container['ico'] = $ico;

        return $this;
    }

    /**
     * Gets obchodni_jmeno
     *
     * @return \Swagger\Client\Model\ObchodniJmenoVr[]
     */
    public function getObchodniJmeno()
    {
        return $this->container['obchodni_jmeno'];
    }

    /**
     * Sets obchodni_jmeno
     *
     * @param \Swagger\Client\Model\ObchodniJmenoVr[] $obchodni_jmeno obchodni_jmeno
     *
     * @return $this
     */
    public function setObchodniJmeno($obchodni_jmeno)
    {
        $this->container['obchodni_jmeno'] = $obchodni_jmeno;

        return $this;
    }

    /**
     * Gets vklady
     *
     * @return \Swagger\Client\Model\VkladVr[]
     */
    public function getVklady()
    {
        return $this->container['vklady'];
    }

    /**
     * Sets vklady
     *
     * @param \Swagger\Client\Model\VkladVr[] $vklady vklady
     *
     * @return $this
     */
    public function setVklady($vklady)
    {
        $this->container['vklady'] = $vklady;

        return $this;
    }

    /**
     * Gets obchodni_jmeno_cizi
     *
     * @return \Swagger\Client\Model\ObchodniJmenoCiziVr[]
     */
    public function getObchodniJmenoCizi()
    {
        return $this->container['obchodni_jmeno_cizi'];
    }

    /**
     * Sets obchodni_jmeno_cizi
     *
     * @param \Swagger\Client\Model\ObchodniJmenoCiziVr[] $obchodni_jmeno_cizi obchodni_jmeno_cizi
     *
     * @return $this
     */
    public function setObchodniJmenoCizi($obchodni_jmeno_cizi)
    {
        $this->container['obchodni_jmeno_cizi'] = $obchodni_jmeno_cizi;

        return $this;
    }

    /**
     * Gets zakladni_kapital
     *
     * @return \Swagger\Client\Model\ZakladniKapitalVr[]
     */
    public function getZakladniKapital()
    {
        return $this->container['zakladni_kapital'];
    }

    /**
     * Sets zakladni_kapital
     *
     * @param \Swagger\Client\Model\ZakladniKapitalVr[] $zakladni_kapital zakladni_kapital
     *
     * @return $this
     */
    public function setZakladniKapital($zakladni_kapital)
    {
        $this->container['zakladni_kapital'] = $zakladni_kapital;

        return $this;
    }

    /**
     * Gets pravni_forma
     *
     * @return \Swagger\Client\Model\PravniFormaVr[]
     */
    public function getPravniForma()
    {
        return $this->container['pravni_forma'];
    }

    /**
     * Sets pravni_forma
     *
     * @param \Swagger\Client\Model\PravniFormaVr[] $pravni_forma pravni_forma
     *
     * @return $this
     */
    public function setPravniForma($pravni_forma)
    {
        $this->container['pravni_forma'] = $pravni_forma;

        return $this;
    }

    /**
     * Gets financni_urad
     *
     * @return string
     */
    public function getFinancniUrad()
    {
        return $this->container['financni_urad'];
    }

    /**
     * Sets financni_urad
     *
     * @param string $financni_urad Finanční úřad - kód (ciselnikKod: FinancniUrad, zdroj: ufo)
     *
     * @return $this
     */
    public function setFinancniUrad($financni_urad)
    {
        $this->container['financni_urad'] = $financni_urad;

        return $this;
    }

    /**
     * Gets adresy
     *
     * @return \Swagger\Client\Model\AdresaVr[]
     */
    public function getAdresy()
    {
        return $this->container['adresy'];
    }

    /**
     * Sets adresy
     *
     * @param \Swagger\Client\Model\AdresaVr[] $adresy adresy
     *
     * @return $this
     */
    public function setAdresy($adresy)
    {
        $this->container['adresy'] = $adresy;

        return $this;
    }

    /**
     * Gets ostatni_skutecnosti
     *
     * @return \Swagger\Client\Model\ObecnyTextVr[]
     */
    public function getOstatniSkutecnosti()
    {
        return $this->container['ostatni_skutecnosti'];
    }

    /**
     * Sets ostatni_skutecnosti
     *
     * @param \Swagger\Client\Model\ObecnyTextVr[] $ostatni_skutecnosti ostatni_skutecnosti
     *
     * @return $this
     */
    public function setOstatniSkutecnosti($ostatni_skutecnosti)
    {
        $this->container['ostatni_skutecnosti'] = $ostatni_skutecnosti;

        return $this;
    }

    /**
     * Gets datum_aktualizace
     *
     * @return \DateTime
     */
    public function getDatumAktualizace()
    {
        return $this->container['datum_aktualizace'];
    }

    /**
     * Sets datum_aktualizace
     *
     * @param \DateTime $datum_aktualizace Datum aktualizace
     *
     * @return $this
     */
    public function setDatumAktualizace($datum_aktualizace)
    {
        $this->container['datum_aktualizace'] = $datum_aktualizace;

        return $this;
    }

    /**
     * Gets stav_subjektu
     *
     * @return string
     */
    public function getStavSubjektu()
    {
        return $this->container['stav_subjektu'];
    }

    /**
     * Sets stav_subjektu
     *
     * @param string $stav_subjektu Stav ekonomického subjektu v ARES - kód (ciselnikKod: StavZdroje, zdroj:com)
     *
     * @return $this
     */
    public function setStavSubjektu($stav_subjektu)
    {
        $this->container['stav_subjektu'] = $stav_subjektu;

        return $this;
    }

    /**
     * Gets datum_vzniku
     *
     * @return \Swagger\Client\Model\DatumVr[]
     */
    public function getDatumVzniku()
    {
        return $this->container['datum_vzniku'];
    }

    /**
     * Sets datum_vzniku
     *
     * @param \Swagger\Client\Model\DatumVr[] $datum_vzniku datum_vzniku
     *
     * @return $this
     */
    public function setDatumVzniku($datum_vzniku)
    {
        $this->container['datum_vzniku'] = $datum_vzniku;

        return $this;
    }

    /**
     * Gets datum_zapisu
     *
     * @return \DateTime
     */
    public function getDatumZapisu()
    {
        return $this->container['datum_zapisu'];
    }

    /**
     * Sets datum_zapisu
     *
     * @param \DateTime $datum_zapisu Datum zápisu subjektu do VR
     *
     * @return $this
     */
    public function setDatumZapisu($datum_zapisu)
    {
        $this->container['datum_zapisu'] = $datum_zapisu;

        return $this;
    }

    /**
     * Gets datum_vymazu
     *
     * @return \DateTime
     */
    public function getDatumVymazu()
    {
        return $this->container['datum_vymazu'];
    }

    /**
     * Sets datum_vymazu
     *
     * @param \DateTime $datum_vymazu Datum výmazu subjektu z VR
     *
     * @return $this
     */
    public function setDatumVymazu($datum_vymazu)
    {
        $this->container['datum_vymazu'] = $datum_vymazu;

        return $this;
    }

    /**
     * Gets zpusob_rizeni
     *
     * @return \Swagger\Client\Model\ZpusobRizeniVr[]
     */
    public function getZpusobRizeni()
    {
        return $this->container['zpusob_rizeni'];
    }

    /**
     * Sets zpusob_rizeni
     *
     * @param \Swagger\Client\Model\ZpusobRizeniVr[] $zpusob_rizeni zpusob_rizeni
     *
     * @return $this
     */
    public function setZpusobRizeni($zpusob_rizeni)
    {
        $this->container['zpusob_rizeni'] = $zpusob_rizeni;

        return $this;
    }

    /**
     * Gets kategorie_zo
     *
     * @return \Swagger\Client\Model\KategorieZoVr[]
     */
    public function getKategorieZo()
    {
        return $this->container['kategorie_zo'];
    }

    /**
     * Sets kategorie_zo
     *
     * @param \Swagger\Client\Model\KategorieZoVr[] $kategorie_zo kategorie_zo
     *
     * @return $this
     */
    public function setKategorieZo($kategorie_zo)
    {
        $this->container['kategorie_zo'] = $kategorie_zo;

        return $this;
    }

    /**
     * Gets pravni_duvod_vymazu
     *
     * @return \Swagger\Client\Model\ObecnyTextVr[]
     */
    public function getPravniDuvodVymazu()
    {
        return $this->container['pravni_duvod_vymazu'];
    }

    /**
     * Sets pravni_duvod_vymazu
     *
     * @param \Swagger\Client\Model\ObecnyTextVr[] $pravni_duvod_vymazu pravni_duvod_vymazu
     *
     * @return $this
     */
    public function setPravniDuvodVymazu($pravni_duvod_vymazu)
    {
        $this->container['pravni_duvod_vymazu'] = $pravni_duvod_vymazu;

        return $this;
    }

    /**
     * Gets cinnosti
     *
     * @return \Swagger\Client\Model\CinnostiVr
     */
    public function getCinnosti()
    {
        return $this->container['cinnosti'];
    }

    /**
     * Sets cinnosti
     *
     * @param \Swagger\Client\Model\CinnostiVr $cinnosti cinnosti
     *
     * @return $this
     */
    public function setCinnosti($cinnosti)
    {
        $this->container['cinnosti'] = $cinnosti;

        return $this;
    }

    /**
     * Gets nazev_nejvyssiho_organu
     *
     * @return \Swagger\Client\Model\ObecnyTextVr[]
     */
    public function getNazevNejvyssihoOrganu()
    {
        return $this->container['nazev_nejvyssiho_organu'];
    }

    /**
     * Sets nazev_nejvyssiho_organu
     *
     * @param \Swagger\Client\Model\ObecnyTextVr[] $nazev_nejvyssiho_organu nazev_nejvyssiho_organu
     *
     * @return $this
     */
    public function setNazevNejvyssihoOrganu($nazev_nejvyssiho_organu)
    {
        $this->container['nazev_nejvyssiho_organu'] = $nazev_nejvyssiho_organu;

        return $this;
    }

    /**
     * Gets exekuce
     *
     * @return \Swagger\Client\Model\ObecnyTextVr[]
     */
    public function getExekuce()
    {
        return $this->container['exekuce'];
    }

    /**
     * Sets exekuce
     *
     * @param \Swagger\Client\Model\ObecnyTextVr[] $exekuce exekuce
     *
     * @return $this
     */
    public function setExekuce($exekuce)
    {
        $this->container['exekuce'] = $exekuce;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
