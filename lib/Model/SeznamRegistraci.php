<?php
/**
 * SeznamRegistraci
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ARES: REST API - veřejné
 *
 * REST rozhraní systému ARES
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.51
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SeznamRegistraci Class Doc Comment
 *
 * @category Class
 * @description Seznam registrací ekonomického subjektu v jednotlivých zdrojích
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SeznamRegistraci implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SeznamRegistraci';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'stav_zdroje_vr' => 'string',
        'stav_zdroje_res' => 'string',
        'stav_zdroje_rzp' => 'string',
        'stav_zdroje_nrpzs' => 'string',
        'stav_zdroje_rpsh' => 'string',
        'stav_zdroje_rcns' => 'string',
        'stav_zdroje_szr' => 'string',
        'stav_zdroje_dph' => 'string',
        'stav_zdroje_sd' => 'string',
        'stav_zdroje_ir' => 'string',
        'stav_zdroje_ceu' => 'string',
        'stav_zdroje_rs' => 'string',
        'stav_zdroje_red' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'stav_zdroje_vr' => null,
        'stav_zdroje_res' => null,
        'stav_zdroje_rzp' => null,
        'stav_zdroje_nrpzs' => null,
        'stav_zdroje_rpsh' => null,
        'stav_zdroje_rcns' => null,
        'stav_zdroje_szr' => null,
        'stav_zdroje_dph' => null,
        'stav_zdroje_sd' => null,
        'stav_zdroje_ir' => null,
        'stav_zdroje_ceu' => null,
        'stav_zdroje_rs' => null,
        'stav_zdroje_red' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'stav_zdroje_vr' => 'stavZdrojeVr',
        'stav_zdroje_res' => 'stavZdrojeRes',
        'stav_zdroje_rzp' => 'stavZdrojeRzp',
        'stav_zdroje_nrpzs' => 'stavZdrojeNrpzs',
        'stav_zdroje_rpsh' => 'stavZdrojeRpsh',
        'stav_zdroje_rcns' => 'stavZdrojeRcns',
        'stav_zdroje_szr' => 'stavZdrojeSzr',
        'stav_zdroje_dph' => 'stavZdrojeDph',
        'stav_zdroje_sd' => 'stavZdrojeSd',
        'stav_zdroje_ir' => 'stavZdrojeIr',
        'stav_zdroje_ceu' => 'stavZdrojeCeu',
        'stav_zdroje_rs' => 'stavZdrojeRs',
        'stav_zdroje_red' => 'stavZdrojeRed'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'stav_zdroje_vr' => 'setStavZdrojeVr',
        'stav_zdroje_res' => 'setStavZdrojeRes',
        'stav_zdroje_rzp' => 'setStavZdrojeRzp',
        'stav_zdroje_nrpzs' => 'setStavZdrojeNrpzs',
        'stav_zdroje_rpsh' => 'setStavZdrojeRpsh',
        'stav_zdroje_rcns' => 'setStavZdrojeRcns',
        'stav_zdroje_szr' => 'setStavZdrojeSzr',
        'stav_zdroje_dph' => 'setStavZdrojeDph',
        'stav_zdroje_sd' => 'setStavZdrojeSd',
        'stav_zdroje_ir' => 'setStavZdrojeIr',
        'stav_zdroje_ceu' => 'setStavZdrojeCeu',
        'stav_zdroje_rs' => 'setStavZdrojeRs',
        'stav_zdroje_red' => 'setStavZdrojeRed'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'stav_zdroje_vr' => 'getStavZdrojeVr',
        'stav_zdroje_res' => 'getStavZdrojeRes',
        'stav_zdroje_rzp' => 'getStavZdrojeRzp',
        'stav_zdroje_nrpzs' => 'getStavZdrojeNrpzs',
        'stav_zdroje_rpsh' => 'getStavZdrojeRpsh',
        'stav_zdroje_rcns' => 'getStavZdrojeRcns',
        'stav_zdroje_szr' => 'getStavZdrojeSzr',
        'stav_zdroje_dph' => 'getStavZdrojeDph',
        'stav_zdroje_sd' => 'getStavZdrojeSd',
        'stav_zdroje_ir' => 'getStavZdrojeIr',
        'stav_zdroje_ceu' => 'getStavZdrojeCeu',
        'stav_zdroje_rs' => 'getStavZdrojeRs',
        'stav_zdroje_red' => 'getStavZdrojeRed'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['stav_zdroje_vr'] = isset($data['stav_zdroje_vr']) ? $data['stav_zdroje_vr'] : null;
        $this->container['stav_zdroje_res'] = isset($data['stav_zdroje_res']) ? $data['stav_zdroje_res'] : null;
        $this->container['stav_zdroje_rzp'] = isset($data['stav_zdroje_rzp']) ? $data['stav_zdroje_rzp'] : null;
        $this->container['stav_zdroje_nrpzs'] = isset($data['stav_zdroje_nrpzs']) ? $data['stav_zdroje_nrpzs'] : null;
        $this->container['stav_zdroje_rpsh'] = isset($data['stav_zdroje_rpsh']) ? $data['stav_zdroje_rpsh'] : null;
        $this->container['stav_zdroje_rcns'] = isset($data['stav_zdroje_rcns']) ? $data['stav_zdroje_rcns'] : null;
        $this->container['stav_zdroje_szr'] = isset($data['stav_zdroje_szr']) ? $data['stav_zdroje_szr'] : null;
        $this->container['stav_zdroje_dph'] = isset($data['stav_zdroje_dph']) ? $data['stav_zdroje_dph'] : null;
        $this->container['stav_zdroje_sd'] = isset($data['stav_zdroje_sd']) ? $data['stav_zdroje_sd'] : null;
        $this->container['stav_zdroje_ir'] = isset($data['stav_zdroje_ir']) ? $data['stav_zdroje_ir'] : null;
        $this->container['stav_zdroje_ceu'] = isset($data['stav_zdroje_ceu']) ? $data['stav_zdroje_ceu'] : null;
        $this->container['stav_zdroje_rs'] = isset($data['stav_zdroje_rs']) ? $data['stav_zdroje_rs'] : null;
        $this->container['stav_zdroje_red'] = isset($data['stav_zdroje_red']) ? $data['stav_zdroje_red'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets stav_zdroje_vr
     *
     * @return string
     */
    public function getStavZdrojeVr()
    {
        return $this->container['stav_zdroje_vr'];
    }

    /**
     * Sets stav_zdroje_vr
     *
     * @param string $stav_zdroje_vr Stav ekonomického subjektu ve zdroji VR (Veřejné rejstříky) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeVr($stav_zdroje_vr)
    {
        $this->container['stav_zdroje_vr'] = $stav_zdroje_vr;

        return $this;
    }

    /**
     * Gets stav_zdroje_res
     *
     * @return string
     */
    public function getStavZdrojeRes()
    {
        return $this->container['stav_zdroje_res'];
    }

    /**
     * Sets stav_zdroje_res
     *
     * @param string $stav_zdroje_res Stav ekonomického subjektu ve zdroji RES (Registr ekonomických subjektů) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeRes($stav_zdroje_res)
    {
        $this->container['stav_zdroje_res'] = $stav_zdroje_res;

        return $this;
    }

    /**
     * Gets stav_zdroje_rzp
     *
     * @return string
     */
    public function getStavZdrojeRzp()
    {
        return $this->container['stav_zdroje_rzp'];
    }

    /**
     * Sets stav_zdroje_rzp
     *
     * @param string $stav_zdroje_rzp Stav ekonomického subjektu ve zdroji RŽP (Registr živnostenského podnikání) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeRzp($stav_zdroje_rzp)
    {
        $this->container['stav_zdroje_rzp'] = $stav_zdroje_rzp;

        return $this;
    }

    /**
     * Gets stav_zdroje_nrpzs
     *
     * @return string
     */
    public function getStavZdrojeNrpzs()
    {
        return $this->container['stav_zdroje_nrpzs'];
    }

    /**
     * Sets stav_zdroje_nrpzs
     *
     * @param string $stav_zdroje_nrpzs Stav ekonomického subjektu ve zdroji NRPZS (Národní registr poskytovatelů zdrovotnických služeb) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeNrpzs($stav_zdroje_nrpzs)
    {
        $this->container['stav_zdroje_nrpzs'] = $stav_zdroje_nrpzs;

        return $this;
    }

    /**
     * Gets stav_zdroje_rpsh
     *
     * @return string
     */
    public function getStavZdrojeRpsh()
    {
        return $this->container['stav_zdroje_rpsh'];
    }

    /**
     * Sets stav_zdroje_rpsh
     *
     * @param string $stav_zdroje_rpsh Stav ekonomického subjektu ve zdroji RPSH (Registr politických stran a hnutí) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeRpsh($stav_zdroje_rpsh)
    {
        $this->container['stav_zdroje_rpsh'] = $stav_zdroje_rpsh;

        return $this;
    }

    /**
     * Gets stav_zdroje_rcns
     *
     * @return string
     */
    public function getStavZdrojeRcns()
    {
        return $this->container['stav_zdroje_rcns'];
    }

    /**
     * Sets stav_zdroje_rcns
     *
     * @param string $stav_zdroje_rcns Stav ekonomického subjektu ve zdroji RCNS(Registr církví a náboženských společenství) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeRcns($stav_zdroje_rcns)
    {
        $this->container['stav_zdroje_rcns'] = $stav_zdroje_rcns;

        return $this;
    }

    /**
     * Gets stav_zdroje_szr
     *
     * @return string
     */
    public function getStavZdrojeSzr()
    {
        return $this->container['stav_zdroje_szr'];
    }

    /**
     * Sets stav_zdroje_szr
     *
     * @param string $stav_zdroje_szr Stav ekonomického subjektu ve zdroji  SZR(Společný zemědělský registr) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeSzr($stav_zdroje_szr)
    {
        $this->container['stav_zdroje_szr'] = $stav_zdroje_szr;

        return $this;
    }

    /**
     * Gets stav_zdroje_dph
     *
     * @return string
     */
    public function getStavZdrojeDph()
    {
        return $this->container['stav_zdroje_dph'];
    }

    /**
     * Sets stav_zdroje_dph
     *
     * @param string $stav_zdroje_dph Stav ekonomického subjektu ve zdroji DPH(Registr plátců daně s přidané hodnoty) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeDph($stav_zdroje_dph)
    {
        $this->container['stav_zdroje_dph'] = $stav_zdroje_dph;

        return $this;
    }

    /**
     * Gets stav_zdroje_sd
     *
     * @return string
     */
    public function getStavZdrojeSd()
    {
        return $this->container['stav_zdroje_sd'];
    }

    /**
     * Sets stav_zdroje_sd
     *
     * @param string $stav_zdroje_sd Stav ekonomického subjektu ve zdroji SD(Registr plátců spotřební daně) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeSd($stav_zdroje_sd)
    {
        $this->container['stav_zdroje_sd'] = $stav_zdroje_sd;

        return $this;
    }

    /**
     * Gets stav_zdroje_ir
     *
     * @return string
     */
    public function getStavZdrojeIr()
    {
        return $this->container['stav_zdroje_ir'];
    }

    /**
     * Sets stav_zdroje_ir
     *
     * @param string $stav_zdroje_ir Stav ekonomického subjektu ve zdroji ISIR(Insolvenční rejstřík) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeIr($stav_zdroje_ir)
    {
        $this->container['stav_zdroje_ir'] = $stav_zdroje_ir;

        return $this;
    }

    /**
     * Gets stav_zdroje_ceu
     *
     * @return string
     */
    public function getStavZdrojeCeu()
    {
        return $this->container['stav_zdroje_ceu'];
    }

    /**
     * Sets stav_zdroje_ceu
     *
     * @param string $stav_zdroje_ceu Stav ekonomického subjektu ve zdroji CEÚ(Centrální evidence úpadců) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeCeu($stav_zdroje_ceu)
    {
        $this->container['stav_zdroje_ceu'] = $stav_zdroje_ceu;

        return $this;
    }

    /**
     * Gets stav_zdroje_rs
     *
     * @return string
     */
    public function getStavZdrojeRs()
    {
        return $this->container['stav_zdroje_rs'];
    }

    /**
     * Sets stav_zdroje_rs
     *
     * @param string $stav_zdroje_rs Stav ekonomického subjektu ve zdroji RŠ(Registr škol) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeRs($stav_zdroje_rs)
    {
        $this->container['stav_zdroje_rs'] = $stav_zdroje_rs;

        return $this;
    }

    /**
     * Gets stav_zdroje_red
     *
     * @return string
     */
    public function getStavZdrojeRed()
    {
        return $this->container['stav_zdroje_red'];
    }

    /**
     * Sets stav_zdroje_red
     *
     * @param string $stav_zdroje_red Stav ekonomického subjektu ve zdroji RED(Registr evidence dotací) - kód (ciselnikKod: StavZdroje, zdroj: com)
     *
     * @return $this
     */
    public function setStavZdrojeRed($stav_zdroje_red)
    {
        $this->container['stav_zdroje_red'] = $stav_zdroje_red;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
